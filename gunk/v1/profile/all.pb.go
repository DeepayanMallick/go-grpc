// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: github.com/DeepayanMallick/go-grpc/gunk/v1/hrm/profile/all.proto

package profile

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string `protobuf:"bytes,1,opt,name=UserID,json=user_id,proto3" json:"user_id,omitempty"`
}

func (x *ProfileRequest) Reset() {
	*x = ProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileRequest) ProtoMessage() {}

func (x *ProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileRequest.ProtoReflect.Descriptor instead.
func (*ProfileRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescGZIP(), []int{0}
}

func (x *ProfileRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

type ProfileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=FirstName,json=first_name,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=LastName,json=last_name,proto3" json:"last_name,omitempty"`
	Email       string `protobuf:"bytes,4,opt,name=Email,json=email,proto3" json:"email,omitempty"`
	Mobile      string `protobuf:"bytes,5,opt,name=Mobile,json=phone,proto3" json:"phone,omitempty"`
	Username    string `protobuf:"bytes,6,opt,name=Username,json=username,proto3" json:"username,omitempty"`
	Image       string `protobuf:"bytes,7,opt,name=Image,json=image,proto3" json:"image,omitempty"`
	FacebookURL string `protobuf:"bytes,8,opt,name=FacebookURL,json=facebook_url,proto3" json:"facebook_url,omitempty"`
	GithubURL   string `protobuf:"bytes,9,opt,name=GithubURL,json=github_url,proto3" json:"github_url,omitempty"`
	TwitterURL  string `protobuf:"bytes,10,opt,name=TwitterURL,json=twitter_url,proto3" json:"twitter_url,omitempty"`
	Description string `protobuf:"bytes,11,opt,name=Description,json=description,proto3" json:"description,omitempty"`
}

func (x *ProfileResponse) Reset() {
	*x = ProfileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileResponse) ProtoMessage() {}

func (x *ProfileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileResponse.ProtoReflect.Descriptor instead.
func (*ProfileResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescGZIP(), []int{1}
}

func (x *ProfileResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProfileResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ProfileResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ProfileResponse) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *ProfileResponse) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ProfileResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ProfileResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProfileResponse) GetFacebookURL() string {
	if x != nil {
		return x.FacebookURL
	}
	return ""
}

func (x *ProfileResponse) GetGithubURL() string {
	if x != nil {
		return x.GithubURL
	}
	return ""
}

func (x *ProfileResponse) GetTwitterURL() string {
	if x != nil {
		return x.TwitterURL
	}
	return ""
}

func (x *ProfileResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProfileUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=FirstName,json=first_name,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=LastName,json=last_name,proto3" json:"last_name,omitempty"`
	Mobile      string `protobuf:"bytes,4,opt,name=Mobile,json=phone,proto3" json:"phone,omitempty"`
	Image       string `protobuf:"bytes,5,opt,name=Image,json=image,proto3" json:"image,omitempty"`
	UserID      string `protobuf:"bytes,6,opt,name=UserID,json=user_id,proto3" json:"user_id,omitempty"`
	FacebookURL string `protobuf:"bytes,7,opt,name=FacebookURL,json=facebook_url,proto3" json:"facebook_url,omitempty"`
	GithubURL   string `protobuf:"bytes,8,opt,name=GithubURL,json=github_url,proto3" json:"github_url,omitempty"`
	TwitterURL  string `protobuf:"bytes,9,opt,name=TwitterURL,json=twitter_url,proto3" json:"twitter_url,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=Description,json=description,proto3" json:"description,omitempty"`
}

func (x *ProfileUpdateRequest) Reset() {
	*x = ProfileUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateRequest) ProtoMessage() {}

func (x *ProfileUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateRequest.ProtoReflect.Descriptor instead.
func (*ProfileUpdateRequest) Descriptor() ([]byte, []int) {
	return file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescGZIP(), []int{2}
}

func (x *ProfileUpdateRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProfileUpdateRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ProfileUpdateRequest) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ProfileUpdateRequest) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ProfileUpdateRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProfileUpdateRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ProfileUpdateRequest) GetFacebookURL() string {
	if x != nil {
		return x.FacebookURL
	}
	return ""
}

func (x *ProfileUpdateRequest) GetGithubURL() string {
	if x != nil {
		return x.GithubURL
	}
	return ""
}

func (x *ProfileUpdateRequest) GetTwitterURL() string {
	if x != nil {
		return x.TwitterURL
	}
	return ""
}

func (x *ProfileUpdateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProfileUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string `protobuf:"bytes,1,opt,name=ID,json=id,proto3" json:"id,omitempty"`
	FirstName   string `protobuf:"bytes,2,opt,name=FirstName,json=first_name,proto3" json:"first_name,omitempty"`
	LastName    string `protobuf:"bytes,3,opt,name=LastName,json=last_name,proto3" json:"last_name,omitempty"`
	Mobile      string `protobuf:"bytes,4,opt,name=Mobile,json=phone,proto3" json:"phone,omitempty"`
	Image       string `protobuf:"bytes,5,opt,name=Image,json=image,proto3" json:"image,omitempty"`
	UserID      string `protobuf:"bytes,6,opt,name=UserID,json=user_id,proto3" json:"user_id,omitempty"`
	FacebookURL string `protobuf:"bytes,7,opt,name=FacebookURL,json=facebook_url,proto3" json:"facebook_url,omitempty"`
	GithubURL   string `protobuf:"bytes,8,opt,name=GithubURL,json=github_url,proto3" json:"github_url,omitempty"`
	TwitterURL  string `protobuf:"bytes,9,opt,name=TwitterURL,json=twitter_url,proto3" json:"twitter_url,omitempty"`
	Description string `protobuf:"bytes,10,opt,name=Description,json=description,proto3" json:"description,omitempty"`
}

func (x *ProfileUpdateResponse) Reset() {
	*x = ProfileUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileUpdateResponse) ProtoMessage() {}

func (x *ProfileUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileUpdateResponse.ProtoReflect.Descriptor instead.
func (*ProfileUpdateResponse) Descriptor() ([]byte, []int) {
	return file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescGZIP(), []int{3}
}

func (x *ProfileUpdateResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProfileUpdateResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *ProfileUpdateResponse) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *ProfileUpdateResponse) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ProfileUpdateResponse) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProfileUpdateResponse) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *ProfileUpdateResponse) GetFacebookURL() string {
	if x != nil {
		return x.FacebookURL
	}
	return ""
}

func (x *ProfileUpdateResponse) GetGithubURL() string {
	if x != nil {
		return x.GithubURL
	}
	return ""
}

func (x *ProfileUpdateResponse) GetTwitterURL() string {
	if x != nil {
		return x.TwitterURL
	}
	return ""
}

func (x *ProfileUpdateResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_codemen_org_oms_gunk_v1_hrm_profile_all_proto protoreflect.FileDescriptor

var file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x63, 0x6f, 0x64, 0x65, 0x6d, 0x65, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6f, 0x6d,
	0x73, 0x2f, 0x67, 0x75, 0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x72, 0x6d, 0x2f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2f, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x22, 0x3d, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xcd, 0x03, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09, 0x46, 0x69, 0x72, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00,
	0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x26, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0c, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x5f, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55,
	0x52, 0x4c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x12, 0x2c, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xad, 0x03, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a, 0x09,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50,
	0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0c, 0x66, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00,
	0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x5f, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x55,
	0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00,
	0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x12, 0x2c, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x22, 0xae, 0x03, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x1a, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x02, 0x69, 0x64, 0x12, 0x29, 0x0a,
	0x09, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x4c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00,
	0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x06, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x20, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00,
	0x50, 0x00, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x46,
	0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x52, 0x4c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0c, 0x66, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x29, 0x0a, 0x09, 0x47, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x55, 0x52, 0x4c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08,
	0x00, 0x18, 0x00, 0x28, 0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0a, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x5f, 0x75, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x0a, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x55, 0x52, 0x4c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28,
	0x00, 0x30, 0x00, 0x50, 0x00, 0x52, 0x0b, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x5f, 0x75,
	0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0x08, 0x00, 0x18, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x50, 0x00, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x3a, 0x06, 0x08, 0x00, 0x10, 0x00, 0x18, 0x00, 0x32, 0xbb, 0x01, 0x0a, 0x0e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02,
	0x00, 0x28, 0x00, 0x30, 0x00, 0x12, 0x5a, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x06, 0x88, 0x02, 0x00, 0x90, 0x02, 0x00, 0x28, 0x00, 0x30,
	0x00, 0x1a, 0x03, 0x88, 0x02, 0x00, 0x42, 0x46, 0x48, 0x01, 0x50, 0x00, 0x5a, 0x2b, 0x63, 0x6f,
	0x64, 0x65, 0x6d, 0x65, 0x6e, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x6f, 0x6d, 0x73, 0x2f, 0x67, 0x75,
	0x6e, 0x6b, 0x2f, 0x76, 0x31, 0x2f, 0x68, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x3b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x80, 0x01, 0x00, 0x88, 0x01, 0x00, 0x90,
	0x01, 0x00, 0xb8, 0x01, 0x00, 0xd8, 0x01, 0x00, 0xf8, 0x01, 0x01, 0xd0, 0x02, 0x00, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescOnce sync.Once
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescData = file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDesc
)

func file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescGZIP() []byte {
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescOnce.Do(func() {
		file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescData = protoimpl.X.CompressGZIP(file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescData)
	})
	return file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDescData
}

var (
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_goTypes  = []interface{}{
		(*ProfileRequest)(nil),        // 0: profile.ProfileRequest
		(*ProfileResponse)(nil),       // 1: profile.ProfileResponse
		(*ProfileUpdateRequest)(nil),  // 2: profile.ProfileUpdateRequest
		(*ProfileUpdateResponse)(nil), // 3: profile.ProfileUpdateResponse
	}
)

var file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_depIdxs = []int32{
	0, // 0: profile.ProfileService.Profile:input_type -> profile.ProfileRequest
	2, // 1: profile.ProfileService.ProfileUpdate:input_type -> profile.ProfileUpdateRequest
	1, // 2: profile.ProfileService.Profile:output_type -> profile.ProfileResponse
	3, // 3: profile.ProfileService.ProfileUpdate:output_type -> profile.ProfileUpdateResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_init() }
func file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_init() {
	if File_codemen_org_oms_gunk_v1_hrm_profile_all_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_goTypes,
		DependencyIndexes: file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_depIdxs,
		MessageInfos:      file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_msgTypes,
	}.Build()
	File_codemen_org_oms_gunk_v1_hrm_profile_all_proto = out.File
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_rawDesc = nil
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_goTypes = nil
	file_codemen_org_oms_gunk_v1_hrm_profile_all_proto_depIdxs = nil
}
